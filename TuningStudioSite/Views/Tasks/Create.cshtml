@using System.Data
@model TuningStudioSite.Models.DbEntities.Task

@{
    ViewBag.Title = "Створення завдання";
}

<h2>Створення завдання</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Task</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title,"Назва завдання", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdClient, "Оберіть клієнта", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdClient", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdClient, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdMaster, "Оберіть майстра для цього завдання", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdMaster", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdMaster, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description,"Опишіть детально завдання", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateTime,"Дата завдання", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DateTime, new { id = "datetimepicker", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateTime.Date, "", new { @class = "text-danger" })
                Формат дати: 01.01.0001 0:00:00

                           
                       
    

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Додати завдання" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Показати наявні завдання", "Index")
</div>





@*<script type="text/javascript">
    $(document).ready(function () {
                                 $('#datetimepicker').datepicker();
                             })
</script>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}*@



